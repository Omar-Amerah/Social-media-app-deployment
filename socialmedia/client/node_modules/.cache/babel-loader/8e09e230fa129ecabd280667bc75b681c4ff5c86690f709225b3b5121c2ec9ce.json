{"ast":null,"code":"export default async function LoginUser(username, password) {\n  try {\n    const response = await fetch(`http://localhost:5001/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password\n      })\n    });\n    console.log(username);\n    console.log(password);\n    const data = await response.json();\n    if (response.status === 200) {\n      alert(\"logged in\");\n      return data.result;\n    } else {\n      if (data.errors !== undefined) {\n        alert(data.errors[0].msg);\n        return;\n      }\n      alert(data.message);\n    }\n  } catch (error) {\n    alert(error.message);\n  }\n}\n_c = LoginUser;\nvar _c;\n$RefreshReg$(_c, \"LoginUser\");","map":{"version":3,"names":["LoginUser","username","password","response","fetch","method","headers","body","JSON","stringify","console","log","data","json","status","alert","result","errors","undefined","msg","message","error","_c","$RefreshReg$"],"sources":["/Users/ameraho/Documents/Multiverse/Deployment/Project/Social-media-app-deployment/socialmedia/client/src/components/utils/users/LoginUser.js"],"sourcesContent":["export default async function LoginUser(username, password) {\n    try {\n        const response = await fetch(`http://localhost:5001/login`, {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n                username: username,\n                password: password\n            })\n        });\n        console.log(username)\n        console.log(password)\n        const data = await response.json();\n        if (response.status === 200) {\n            alert(\"logged in\");\n            return data.result;\n        } else {\n            if (data.errors !== undefined) {\n                alert(data.errors[0].msg);\n                return;\n            }\n            alert(data.message);\n        }\n    } catch (error) {\n        alert(error.message);\n    }\n}\n"],"mappings":"AAAA,eAAe,eAAeA,SAASA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;EACxD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,6BAA4B,EAAE;MACxDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBR,QAAQ,EAAEA,QAAQ;QAClBC,QAAQ,EAAEA;MACd,CAAC;IACL,CAAC,CAAC;IACFQ,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC;IACrBS,OAAO,CAACC,GAAG,CAACT,QAAQ,CAAC;IACrB,MAAMU,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAClC,IAAIV,QAAQ,CAACW,MAAM,KAAK,GAAG,EAAE;MACzBC,KAAK,CAAC,WAAW,CAAC;MAClB,OAAOH,IAAI,CAACI,MAAM;IACtB,CAAC,MAAM;MACH,IAAIJ,IAAI,CAACK,MAAM,KAAKC,SAAS,EAAE;QAC3BH,KAAK,CAACH,IAAI,CAACK,MAAM,CAAC,CAAC,CAAC,CAACE,GAAG,CAAC;QACzB;MACJ;MACAJ,KAAK,CAACH,IAAI,CAACQ,OAAO,CAAC;IACvB;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZN,KAAK,CAACM,KAAK,CAACD,OAAO,CAAC;EACxB;AACJ;AAACE,EAAA,GA1B6BtB,SAAS;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}